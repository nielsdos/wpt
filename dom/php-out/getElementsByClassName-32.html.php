<?php define('undefined', 'undefined');require __DIR__.'/../driver.inc.php';
$content = file_get_contents(__DIR__."/../nodes/getElementsByClassName-32.html");
$document = Dom\HTMLDocument::createFromString($content);
;
"use strict";
;
test(function() {global $document;
;
  $p = $document->createElement("p");
  $p->className = "unknown";
  $document->body->appendChild($p);
;
  $elements = $document->getElementsByClassName("first-p");
  assert_array_equals($elements, []);
;
}, "cannot find the class name");
;
test(function() {global $document;
;
  $p = $document->createElement("p");
  $p->className = "first-p";
  $document->body->appendChild($p);
;
  $elements = $document->getElementsByClassName("first-p");
  assert_array_equals($elements, [$p]);
;
}, "finds the class name");
;
;
test(function() {global $document;
;
  $p = $document->createElement("p");
  $p->className = "the-p second third";
  $document->body->appendChild($p);
;
  $elements1 = $document->getElementsByClassName("the-p");
  assert_array_equals($elements1, [$p]);
;
  $elements2 = $document->getElementsByClassName("second");
  assert_array_equals($elements2, [$p]);
;
  $elements3 = $document->getElementsByClassName("third");
  assert_array_equals($elements3, [$p]);
;
}, "finds the same element with multiple class names");
;
test(function() {global $document;
;
  $elements = $document->getElementsByClassName("df-article");
;
  assert_equals($elements->length, 3);
  assert_array_equals(array_map(fn ($x) => $x->id, [...$elements]), ["1", "2", "3"]);
;
}, "does not get confused by numeric IDs");
;
;