<?php define('undefined', 'undefined');require __DIR__.'/../driver.inc.php';
$content = file_get_contents(__DIR__."/../nodes/Element-getElementsByClassName.html");
$document = Dom\HTMLDocument::createFromString($content);
;
test(function()  {global $document;
  $a = $document->createElement("a");
  $b = $document->createElement("b");
  $b->className = "foo";
  $a->appendChild($b);
  $list = $a->getElementsByClassName("foo");
  assert_array_equals($list, [$b]);
  $secondList = $a->getElementsByClassName("foo");
  assert_true($list === $secondList || $list !== $secondList);
}, "getElementsByClassName should work on disconnected subtrees");
;
test(function()  {global $document;
  $list = $document->getElementsByClassName("foo");
  assert_false($list instanceof Dom\NodeList, "NodeList");
  assert_true($list instanceof Dom\HTMLCollection, "HTMLCollection");
}, "Interface should be correct");
;
test(function()  {global $document;
  $a = $document->createElement("a");
  $b = $document->createElement("b");
  $c = $document->createElement("c");
  $b->className = "foo";
  $document->body->appendChild($a);
  $a->appendChild($b);
;
  $l = $a->getElementsByClassName("foo");
  assert_true($l instanceof Dom\HTMLCollection);
  assert_equals($l->length, 1);
;
  $c->className = "foo";
  $a->appendChild($c);
  assert_equals($l->length, 2);
;
  $a->removeChild($c);
  assert_equals($l->length, 1);
}, "getElementsByClassName() should be a live collection");
;